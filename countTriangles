/*uselessssss
float d(int x,int X,int y,int Y)
{
    return sqrt((x-X)*(x-X)+(y-Y)*(y-Y));
}

float A(int a,int b,int c)
{
    float p=(a+b+c)/2.;
    return sqrt(p*(p-a)*(p-b)*(p-c));
}
*/
int i,j,k,n,s,countTriangles(auto x, auto y) {
n=size(x);
for(;i<n-2;i++)
    for(j=i+1;j<n-1;j++)
        for(k=j+1;k<n;k++)
      //  {
         /*   cout<<"\ni="<<i<<" j="<<j<<" k="<<k;
              cout<<"\nd1="<<d(x[i],x[j],y[i],y[j]);
              cout<<"\nd2="<<d(x[i],x[k],y[i],y[k]);
              cout<<"\nd3="<<d(x[j],y[j],x[k],y[k]);
              cout<<"\nA="<<A(d(x[i],x[j],y[i],y[j]),d(x[i],x[k],y[i],y[k]),d(x[j],y[j],x[k],y[k]));
*/
          //  float a=d(x[i],x[j],y[i],y[j]),b=d(x[i],x[k],y[i],y[k]),c=d(x[j],x[k],y[j],y[k]);
          //  s+=a<b+c&c<a+b&b<a+c;
          //  s+=(A(a,b,c)!=0);
            s+=x[i]*(y[j]-y[k])+x[j]*(y[k]-y[i])+x[k]*(y[i]-y[j])!=0;
     //   }
return s;
}
